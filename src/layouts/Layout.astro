---
interface Props {
    title: string;
    description: string;
    theme?: string;
}

var props = Astro.props as Props;
if (Astro.props) {
    props = Astro.props as Props;
}
---

<html>
    <head>
        <title>{props.title}</title>
        <meta charset="UTF-8" />
        <meta name="description" content={props.description} />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/x-icon" href="/favicon.ico" />
        <meta name="generator" content={Astro.generator} />
        <!-- Open Graph / Facebook -->
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://panjohnny.vercel.app/" />
        <meta property="og:title" content={props.title} />
        <meta property="og:description" content={props.description} />
        <meta property="og:image" content="/favicon.ico" />

        <!-- Twitter -->
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content="https://panjohnny.vercel.app/" />
        <meta property="twitter:title" content={props.title} />
        <meta property="twitter:description" content={props.description} />
        <meta property="twitter:image" content="/favicon.ico" />

        <script
            src="https://kit.fontawesome.com/748c4b57ac.js"
            crossorigin="anonymous"></script>
    </head>

    <body>
        <header>
            <h1>{props.title}</h1>
            <div class="bar">
                <!-- COSMETICS -->
                <div aria-hidden="true">
                    <span role="button" id="scheme"
                        ><span class="rectangleRender"></span>
                    </span>
                </div>
                <!-- LINKS -->
                <div class="links">
                    <a
                        href="https://github.com/PanJohnny"
                        title="GitHub"
                        class="reset fa-brands fa-github"></a>
                    <a
                        href="/blog"
                        title="Blog"
                        class="reset fa-solid fa-quote-left"></a>
                    <a
                        href="/projects"
                        title="Projects"
                        class="reset fa-solid fa-helmet-safety"></a>
                    <a href="/" title="Homepage" class="reset fa-solid fa-house"
                    ></a>
                </div>
            </div>
        </header>
        <slot />
        <!-- COLOR PICKER MODAL -->
        <dialog id="colorPicker">
            <h2>Please choose theme</h2>
            <input
                type="button"
                class="rectangleRender light"
                data-scheme="light"
            />
            <input
                type="button"
                class="rectangleRender dark"
                data-scheme="dark"
            />
            <input
                type="button"
                class="rectangleRender lapis"
                data-scheme="lapis"
            />
        </dialog>
        <footer class="center-text">
            <span class="nowrap">Created with â™¥ by PanJohnny</span> | <span
                class="nowrap"
                >Icons from <i class="fa-solid fa-font-awesome"></i> Font Awesome</span
            >
        </footer>
    </body>
</html>

<style>
    @import url(https://fonts.bunny.net/css?family=actor:400);

    :global(.nowrap) {
        white-space: nowrap;
    }

    :global(.center-text) {
        text-align: center;
    }

    :root {
        --raisin-black: #1e1e24;
        --floral-white: #fff8f0;
        --sunset: #ffcf99;
        --lapis-lazuli: #33658A;
    }

    html {
        font-family: "Actor", sans-serif;
        background-color: var(--floral-white);
        color: var(--raisin-black);
        text-decoration-color: var(--sunset);
    }

    .light {
        background-color: var(--floral-white);
        color: var(--raisin-black);
        border-color: var(--raisin-black);
    }

    .dark {
        background-color: var(--raisin-black);
        color: var(--floral-white);
        border-color: var(--floral-white);
    }

    .lapis {
        background-color: var(--lapis-lazuli);
        color: var(--floral-white);
        border-color: var(--floral-white);
    }

    :global(.no-margin) {
        margin: 0px;
    }

    :global(.reset) {
        color: inherit;
        text-decoration: inherit;
    }

    header > h1 {
        text-align: center;
    }

    [role="button"] {
        cursor: pointer;
    }

    .rectangleRender {
        cursor: pointer;
        display: inline-block;
        padding: 1em;
        border-radius: 10px;
        border-color: var(--sunset);
        border-style: solid;
        width: 0px;
        height: 0px;
        outline: none;
    }

    dialog {
        background-color: var(--floral-white);
        color: var(--raisin-black);
        border-radius: 15px;
    }

    .bar {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .links {
        font-size: 2em;
    }

    :global(a) {
        color: inherit;
        text-decoration: var(--sunset) underline 2px;
    }
</style>

<script>
    const schemes = ["dark", "light", "lapis"];
    const html = document.querySelector("html");
    const schemeToggle = document.querySelector("#scheme");
    const colorPicker: HTMLDialogElement | null = document.querySelector("#colorPicker");
    window.addEventListener("load", loadMode);
    schemeToggle?.addEventListener("click", schemePallet);

    function loadMode() {
        // Check localStorage and update data respectively
        const scheme = localStorage.getItem("color-scheme");
        if (scheme) {
            html?.classList.add(scheme);

            colorPicker?.querySelectorAll("input[type=button]").forEach((e) => {
                e.addEventListener("click", () => {
                    localStorage.setItem(
                        "color-scheme",
                        e.getAttribute("data-scheme") + ""
                    );

                    // If schemes already present delete them
                    schemes.forEach((s) => {
                        if (html?.classList.contains(s))
                            html.classList.remove(s);
                    });

                    // Close modal
                    colorPicker.close();

                    // Load mode
                    loadMode();
                });
            });
        } else {
            if (
                window.matchMedia &&
                window.matchMedia("(prefers-color-scheme: dark)").matches
            ) {
                localStorage.setItem("color-scheme", "dark");
            } else {
                localStorage.setItem("color-scheme", "light");
            }
            loadMode();
            return;
        }
    }

    function schemePallet() {
        if (colorPicker) colorPicker.showModal();
    }
</script>
