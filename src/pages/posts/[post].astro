---
import { MarkdownInstance } from "astro";

const { post } = Astro.params;

const blogs = await Astro.glob("./_/*.md");
if (post == "latest") {
    function convertToValidDate(date: string) {
        const split = date.split(".");
        return split[2].trim() + "-" + split[1].trim() + "-" + split[0].trim();
    }
    var latestDate: number = 0;
    var latest: object;
    blogs.map((blog) => {
        const date = Date.parse(convertToValidDate(blog.frontmatter.date));

        if (date > latestDate) {
            latest = blog;
            latestDate = date;
        }
    });

    if (latest) return Astro.redirect("./" + latest.frontmatter.id);
}

let bl:MarkdownInstance<Record<string, any>>;
blogs.map((blog) => {
    const id = blog.frontmatter.id;

    if (id == post) {
        bl = blog;
    }
})

const Post = bl.Content;
if (bl == null)
    return Astro.redirect("/blog")
---

<Post></Post>